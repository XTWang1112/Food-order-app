{"ast":null,"code":"var _jsxFileName = \"/Users/xiaotongwang/Desktop/Food-order-app/src/components/store/CartProvider.js\",\n  _s = $RefreshSig$();\nimport CartContext from \"./cart-context\";\nimport { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const existingItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingItemIndex];\n    let updatedItems;\n    if (existingCartItem) {\n      const updatedItem = {\n        ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n  if (action.type === \"REMOVE\") {\n    const existingItemIndex = state.items.findIndex(item => item.id === action.id);\n    const existingItem = state.items[existingItemIndex];\n    const updatedTotalAmount = Math.max(0, state.totalAmount - existingItem.price);\n    let updatedItems;\n    if (existingItem.amount === 1) {\n      updatedItems = state.items.filter(item => item.id !== action.id);\n    } else {\n      const updatedItem = {\n        ...existingItem,\n        amount: existingItem.amount - 1\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingItemIndex] = updatedItem;\n    }\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n  return defaultCartState;\n};\nconst CartProvider = props => {\n  _s();\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n_c = CartProvider;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["CartContext","useReducer","defaultCartState","items","totalAmount","cartReducer","state","action","type","existingItemIndex","findIndex","item","id","existingCartItem","updatedItems","updatedItem","amount","concat","updatedTotalAmount","price","existingItem","Math","max","filter","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"sources":["/Users/xiaotongwang/Desktop/Food-order-app/src/components/store/CartProvider.js"],"sourcesContent":["import CartContext from \"./cart-context\";\nimport {useReducer} from \"react\";\n\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0,\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const existingItemIndex = state.items.findIndex(\n      (item) => item.id === action.item.id\n    );\n\n    const existingCartItem = state.items[existingItemIndex];\n\n    let updatedItems;\n\n    if (existingCartItem) {\n      const updatedItem = {\n        ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount,\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    const updatedTotalAmount =\n      state.totalAmount + action.item.price * action.item.amount;\n\n    return {items: updatedItems, totalAmount: updatedTotalAmount};\n  }\n  if (action.type === \"REMOVE\") {\n    const existingItemIndex = state.items.findIndex(\n      (item) => item.id === action.id\n    );\n    const existingItem = state.items[existingItemIndex];\n    const updatedTotalAmount = Math.max(\n      0,\n      state.totalAmount - existingItem.price\n    );\n    let updatedItems;\n    if (existingItem.amount === 1) {\n      updatedItems = state.items.filter((item) => item.id !== action.id);\n    } else {\n      const updatedItem = {...existingItem, amount: existingItem.amount - 1};\n      updatedItems = [...state.items];\n      updatedItems[existingItemIndex] = updatedItem;\n    }\n    return {items: updatedItems, totalAmount: updatedTotalAmount};\n  }\n  return defaultCartState;\n};\n\nconst CartProvider = (props) => {\n  const [cartState, dispatchCartAction] = useReducer(\n    cartReducer,\n    defaultCartState\n  );\n\n  const addItemToCartHandler = (item) => {\n    dispatchCartAction({type: \"ADD\", item: item});\n  };\n\n  const removeItemFromCartHandler = (id) => {\n    dispatchCartAction({type: \"REMOVE\", id: id});\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler,\n  };\n\n  return (\n    <CartContext.Provider value={cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartProvider;\n"],"mappings":";;AAAA,OAAOA,WAAW,MAAM,gBAAgB;AACxC,SAAQC,UAAU,QAAO,OAAO;AAAC;AAEjC,MAAMC,gBAAgB,GAAG;EACvBC,KAAK,EAAE,EAAE;EACTC,WAAW,EAAE;AACf,CAAC;AAED,MAAMC,WAAW,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;EACrC,IAAIA,MAAM,CAACC,IAAI,KAAK,KAAK,EAAE;IACzB,MAAMC,iBAAiB,GAAGH,KAAK,CAACH,KAAK,CAACO,SAAS,CAC5CC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKL,MAAM,CAACI,IAAI,CAACC,EAAE,CACrC;IAED,MAAMC,gBAAgB,GAAGP,KAAK,CAACH,KAAK,CAACM,iBAAiB,CAAC;IAEvD,IAAIK,YAAY;IAEhB,IAAID,gBAAgB,EAAE;MACpB,MAAME,WAAW,GAAG;QAClB,GAAGF,gBAAgB;QACnBG,MAAM,EAAEH,gBAAgB,CAACG,MAAM,GAAGT,MAAM,CAACI,IAAI,CAACK;MAChD,CAAC;MACDF,YAAY,GAAG,CAAC,GAAGR,KAAK,CAACH,KAAK,CAAC;MAC/BW,YAAY,CAACL,iBAAiB,CAAC,GAAGM,WAAW;IAC/C,CAAC,MAAM;MACLD,YAAY,GAAGR,KAAK,CAACH,KAAK,CAACc,MAAM,CAACV,MAAM,CAACI,IAAI,CAAC;IAChD;IAEA,MAAMO,kBAAkB,GACtBZ,KAAK,CAACF,WAAW,GAAGG,MAAM,CAACI,IAAI,CAACQ,KAAK,GAAGZ,MAAM,CAACI,IAAI,CAACK,MAAM;IAE5D,OAAO;MAACb,KAAK,EAAEW,YAAY;MAAEV,WAAW,EAAEc;IAAkB,CAAC;EAC/D;EACA,IAAIX,MAAM,CAACC,IAAI,KAAK,QAAQ,EAAE;IAC5B,MAAMC,iBAAiB,GAAGH,KAAK,CAACH,KAAK,CAACO,SAAS,CAC5CC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKL,MAAM,CAACK,EAAE,CAChC;IACD,MAAMQ,YAAY,GAAGd,KAAK,CAACH,KAAK,CAACM,iBAAiB,CAAC;IACnD,MAAMS,kBAAkB,GAAGG,IAAI,CAACC,GAAG,CACjC,CAAC,EACDhB,KAAK,CAACF,WAAW,GAAGgB,YAAY,CAACD,KAAK,CACvC;IACD,IAAIL,YAAY;IAChB,IAAIM,YAAY,CAACJ,MAAM,KAAK,CAAC,EAAE;MAC7BF,YAAY,GAAGR,KAAK,CAACH,KAAK,CAACoB,MAAM,CAAEZ,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKL,MAAM,CAACK,EAAE,CAAC;IACpE,CAAC,MAAM;MACL,MAAMG,WAAW,GAAG;QAAC,GAAGK,YAAY;QAAEJ,MAAM,EAAEI,YAAY,CAACJ,MAAM,GAAG;MAAC,CAAC;MACtEF,YAAY,GAAG,CAAC,GAAGR,KAAK,CAACH,KAAK,CAAC;MAC/BW,YAAY,CAACL,iBAAiB,CAAC,GAAGM,WAAW;IAC/C;IACA,OAAO;MAACZ,KAAK,EAAEW,YAAY;MAAEV,WAAW,EAAEc;IAAkB,CAAC;EAC/D;EACA,OAAOhB,gBAAgB;AACzB,CAAC;AAED,MAAMsB,YAAY,GAAIC,KAAK,IAAK;EAAA;EAC9B,MAAM,CAACC,SAAS,EAAEC,kBAAkB,CAAC,GAAG1B,UAAU,CAChDI,WAAW,EACXH,gBAAgB,CACjB;EAED,MAAM0B,oBAAoB,GAAIjB,IAAI,IAAK;IACrCgB,kBAAkB,CAAC;MAACnB,IAAI,EAAE,KAAK;MAAEG,IAAI,EAAEA;IAAI,CAAC,CAAC;EAC/C,CAAC;EAED,MAAMkB,yBAAyB,GAAIjB,EAAE,IAAK;IACxCe,kBAAkB,CAAC;MAACnB,IAAI,EAAE,QAAQ;MAAEI,EAAE,EAAEA;IAAE,CAAC,CAAC;EAC9C,CAAC;EAED,MAAMkB,WAAW,GAAG;IAClB3B,KAAK,EAAEuB,SAAS,CAACvB,KAAK;IACtBC,WAAW,EAAEsB,SAAS,CAACtB,WAAW;IAClC2B,OAAO,EAAEH,oBAAoB;IAC7BI,UAAU,EAAEH;EACd,CAAC;EAED,oBACE,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAEC,WAAY;IAAA,UACtCL,KAAK,CAACQ;EAAQ;IAAA;IAAA;IAAA;EAAA,QACM;AAE3B,CAAC;AAAC,GA1BIT,YAAY;AAAA,KAAZA,YAAY;AA4BlB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}